!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,u){var a,c,s=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),c=function(){s.element.remove(),s.element=null},(a="removeCard")in this?Object.defineProperty(this,a,{value:c,enumerable:!0,configurable:!0,writable:!0}):this[a]=c,this._image=e.link,this._title=e.name,this._likes=e.likes,this._template=n,this._userId=i,this._imageOwnerId=e.owner._id,this._handleCardClick=r,this._handleDeleteClick=o,this._handleLikeClick=u}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._template).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this.element=this._getTemplate(),this.element.querySelector(".element__img").src=this._image,this.element.querySelector(".element__img").alt=this._title,this.element.querySelector(".element__container-heading").textContent=this._title,this.element.querySelector(".image-likes").textContent=this._likes.length,this._imageOwnerId===this._userId&&(this.element.querySelector(".element__delete").style.visibility="visible"),this.isLiked()&&this.element.querySelector(".heart-button").classList.add("heart-button_active"),this._setEventListeners(),this.element}},{key:"cardLike",value:function(e){this._likes=e,this.element.querySelector(".image-likes").textContent=this._likes.length,this.element.querySelector(".heart-button").classList.add("heart-button_active")}},{key:"cardDislike",value:function(e){console.log(e),this.element.querySelector(".image-likes").textContent=e.length,this.element.querySelector(".heart-button").classList.remove("heart-button_active")}},{key:"_setEventListeners",value:function(){var e=this;this.element.querySelector(".heart-button").addEventListener("click",(function(){return e._handleLikeClick()})),this.element.querySelector(".element__img").addEventListener("click",(function(){return e._handleCardClick()})),this.element.querySelector(".element__delete").addEventListener("click",(function(){return e._handleDeleteClick()}))}},{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._settingsObject=t,this._formElement=n}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){var e=this._settingsObject.submitButtonSelector;this._formElement.addEventListener(e,(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this,t=this._settingsObject,n=t.inputSelector,r=t.submitButtonSelector,o=Array.from(this._formElement.querySelectorAll(n)),i=this._formElement.querySelector(r);this._toggleButtonState(o,i),o.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleButtonState(o,i)}))}))}},{key:"_showInputError",value:function(e){var t=e.validationMessage,n=this._settingsObject,r=n.inputErrorClass,o=n.errorClass,i=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(r),i.textContent=t,i.classList.add(o)}},{key:"_hideInputError",value:function(e){var t=this._settingsObject,n=t.inputErrorClass,r=t.errorClass,o=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(n),o.classList.remove(r),o.textContent=""}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e,t){var n=this._settingsObject.inactiveButtonClass;this._hasInvalidInput(e)?(t.classList.add(n),t.setAttribute("disabled",!0)):(t.classList.remove(n),t.removeAttribute("disabled",!0))}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var u=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),i(this,"_closePopupWithOverlay",(function(e){e.target===e.currentTarget&&n.close()})),this._popupElement=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close").addEventListener("click",(function(){return e.close()})),this._popupElement.addEventListener("mousedown",this._closePopupWithOverlay)}}])&&o(t.prototype,n),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},l(e,t,n||e)}function f(e,t){return f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},f(e,t)}function p(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function u(){return c(this,u),i.apply(this,arguments)}return t=u,(n=[{key:"open",value:function(e,t){var n=this._popupElement.querySelector(".popup-image__image"),r=this._popupElement.querySelector(".popup-image__name");n.src=e,r.textContent=t,l(h(u.prototype),"open",this).call(this)}}])&&s(t.prototype,n),u}(u);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function m(e){return function(e){if(Array.isArray(e))return v(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return v(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?v(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(e,t){return b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},b(e,t)}function g(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return S(e)}function S(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function k(e,t,n){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},k(e,t,n||e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return g(this,e)});function u(e,t){var n,r,o,a,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),c=function(){k((n=S(r),E(u.prototype)),"setEventListeners",n).call(n),r._form.addEventListener("submit",(function(e){r._form.querySelector(".popup__button").textContent="Saving...",r._submitHandler(r._getInputValues()),e.preventDefault()}))},(a="setEventListeners")in(o=S(r=i.call(this,e)))?Object.defineProperty(o,a,{value:c,enumerable:!0,configurable:!0,writable:!0}):o[a]=c,r._submitHandler=t,r._form=r._popupElement.querySelector(".popup__form"),r}return t=u,(n=[{key:"_getInputValues",value:function(){var e=m(this._form.querySelectorAll(".popup__input")),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"setForminputs",value:function(){m(this._form.querySelectorAll(".popup__input"))}},{key:"close",value:function(){k(E(u.prototype),"close",this).call(this),this._form.reset(),this._form.querySelector(".popup__button").textContent="Save",this._form.querySelector(".popup__button").setAttribute("disabled",!0),this._form.querySelector(".popup__button").classList.add("popup__button_disabled")}}])&&_(t.prototype,n),u}(u);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function j(e,t){return j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},j(e,t)}function C(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return L(e)}function L(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function q(e,t,n){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},q(e,t,n||e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(o,e);var t,n,r=(t=o,n=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,r=I(t);if(n){var o=I(this).constructor;e=Reflect.construct(r,arguments,o)}else e=r.apply(this,arguments);return C(this,e)});function o(e,t){var n,i,u,a,c;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),c=function(){q((n=L(i),I(o.prototype)),"setEventListeners",n).call(n),i._form.addEventListener("submit",(function(e){e.preventDefault(),i._submitHandler()}))},(a="setEventListeners")in(u=L(i=r.call(this,e)))?Object.defineProperty(u,a,{value:c,enumerable:!0,configurable:!0,writable:!0}):u[a]=c,i._submitHandler=t,i._form=i._popupElement.querySelector(".popup__form"),i}return o}(u);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameSelector=document.querySelector(t),this._jobSelector=document.querySelector(n),this._avatarSelector=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameSelector.textContent,job:this._jobSelector.textContent}}},{key:"setUserInfo",value:function(e,t,n){this._nameSelector.textContent=e,this._jobSelector.textContent=t,this._avatarSelector.src=n}},{key:"setAvatarImage",value:function(e){this._avatarSelector.src=e}}])&&R(t.prototype,n),e}();function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}},{key:"prependItem",value:function(e){this._container.prepend(e)}}])&&D(t.prototype,n),e}(),A={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},x=document.querySelector(".profile__add-button"),B=document.querySelector(".profile__avatar-overlay"),V=document.querySelector(".profile__info-edit"),H=document.querySelector("#popup-profile__form"),N=document.querySelector("#popup-avataredit__form"),J=(document.querySelector("#popup-profile__form-input_name"),document.querySelector("#popup-profile__form-input_job"),document.querySelector("#popup-card__form"));function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var W=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"setUserInfo",value:function(e,t){var n=this;return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return n._getResponseData(e)}))}},{key:"setAvatarImage",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:"".concat(e)})}).then((function(e){return t._getResponseData(e)}))}},{key:"addNewCard",value:function(e,t){var n=this;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return n._getResponseData(e)}))}},{key:"removeCard",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return t._getResponseData(e)}))}},{key:"addLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return t._getResponseData(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return t._getResponseData(e)}))}}])&&M(t.prototype,n),e}())({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"9d69919a-c5e6-499a-8de5-d578571e9e77","Content-Type":"application/json"}}),z=new w(".popup-avataredit",(function(e){W.setAvatarImage(e["popup-avataredit-profile-link-input"]).then((function(){F.setAvatarImage(e["popup-avataredit-profile-link-input"])})).then((function(){return z.close()})).catch((function(e){return console.log("Error: ".concat(e))}))})),F=new T(".profile__info-heading",".profile__info-description",".profile__avatar"),$=new d(".popup-image"),G=new w(".popup-profile",(function(e){W.setUserInfo(e["popup-profile-profile-name-input"],e["popup-profile-job-input"]).then((function(e){F.setUserInfo(e.name,e.about,e.avatar)})).then((function(){return G.close()})).catch((function(e){return console.log("Error: ".concat(e))}))}));$.setEventListeners(),z.setEventListeners(),G.setEventListeners(),V.addEventListener("click",(function(){var e=F.getUserInfo();document.querySelector("#popup-profile__form-input_name").value=e.name,document.querySelector("#popup-profile__form-input_job").value=e.job,G.open()})),B.addEventListener("click",(function(){z.open()})),W.getUserInfo().then((function(e){F.setUserInfo(e.name,e.about,e.avatar);var n=function(n){var r=new t(n,"#element-template",(function(){$.open(n.link,n.name)}),(function(){var e=new P(".popup-delete",(function(){W.removeCard(n._id).then((function(){r.removeCard()})).then((function(){return e.close()})).catch((function(e){return console.log("Error: ".concat(e))}))}));e.setEventListeners(),e.open()}),e._id,(function(){r.isLiked()?W.removeLike(n._id).then((function(e){r.cardDislike(e.likes)})).catch((function(e){return console.log("Error: ".concat(e))})):W.addLike(n._id).then((function(e){r.cardLike(e.likes)})).catch((function(e){return console.log("Error: ".concat(e))}))}));return r.generateCard()};W.getInitialCards().then((function(e){var t=new U({items:e,renderer:function(e){t.addItem(n(e))}},".elements");t.renderItems();var r=new w(".popup-card",(function(e){W.addNewCard(e["popup-card-title-input"],e["popup-card-imgurl-input"]).then((function(e){t.prependItem(n(e))})).then((function(){return r.close()})).catch((function(e){return console.log("Error: ".concat(e))}))}));r.setEventListeners(),x.addEventListener("click",(function(){r.open()}))})).catch((function(e){return console.log("Error: ".concat(e))}))})).catch((function(e){return console.log("Error: ".concat(e))})),new r(A,J).enableValidation(),new r(A,H).enableValidation(),new r(A,N).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,